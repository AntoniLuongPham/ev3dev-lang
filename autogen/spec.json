{
    "meta": {
        "version": "0.9.2-pre",
        "specRevision": 3,
        "supportedKernel": "v3.16.7-ckt9-ev3dev1"
    },
    "classes": {
        "motor": {
            "friendlyName": "Motor",
            "description": "The motor class provides a uniform interface for using motors with positional and directional feedback such as the EV3 and NXT motors. This feedback allows for precise control of the motors. This is the most common type of motor, so we just call it \"motor\".",
            "docsLink": "http://www.ev3dev.org/docs/drivers/tacho-motor-class/",
            "systemClassName":  "tacho-motor",
            "systemDeviceNameConvention":  "motor{0}",
            "systemProperties": [
                { "name": "Command", "systemName": "command", "type": "string", "readAccess": false, "writeAccess": true },
                { "name": "Commands", "systemName": "commands", "type": "string array", "readAccess": true, "writeAccess": false },
                { "name": "Count Per Rot", "systemName": "count_per_rot", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Driver Name", "systemName": "driver_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Duty Cycle", "systemName": "duty_cycle", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Duty Cycle SP", "systemName": "duty_cycle_sp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Encoder Polarity", "systemName": "encoder_polarity", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Polarity", "systemName": "polarity", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Port Name", "systemName": "port_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Position", "systemName": "position", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Position P", "systemName": "hold_pid/Kp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Position I", "systemName": "hold_pid/Ki", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Position D", "systemName": "hold_pid/Kd", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Position SP", "systemName": "position_sp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Speed", "systemName": "speed", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Speed SP", "systemName": "speed_sp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Ramp Up SP", "systemName": "ramp_up_sp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Ramp Down SP", "systemName": "ramp_down_sp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Speed Regulation Enabled", "systemName": "speed_regulation", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Speed Regulation P", "systemName": "speed_pid/Kp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Speed Regulation I", "systemName": "speed_pid/Ki", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Speed Regulation D", "systemName": "speed_pid/Kd", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "State", "systemName": "state", "type": "string array", "readAccess": true, "writeAccess": false },
                { "name": "Stop Command", "systemName": "stop_command", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Stop Commands", "systemName": "stop_commands", "type": "string array", "readAccess": true, "writeAccess": false },
                { "name": "Time SP", "systemName": "time_sp", "type": "int", "readAccess": true, "writeAccess": true }
            ]
        },
        "dcMotor": {
            "friendlyName": "DC Motor",
            "description": "The DC motor class provides a uniform interface for using regular DC motors with no fancy controls or feedback. This includes LEGO MINDSTORMS RCX motors and LEGO Power Functions motors.",
            "docsLink": "http://www.ev3dev.org/docs/drivers/dc-motor-class/",
            "systemClassName":  "dc-motor",
            "systemDeviceNameConvention":  "motor{0}",
            "systemProperties": [
                { "name": "Command", "systemName": "command", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Commands", "systemName": "commands", "type": "string array", "readAccess": true, "writeAccess": false },
                { "name": "Driver Name", "systemName": "driver_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Duty Cycle", "systemName": "duty_cycle", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Duty Cycle SP", "systemName": "duty_cycle_sp", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Polarity", "systemName": "polarity", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Port Name", "systemName": "port_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Ramp Down MS", "systemName": "ramp_down_ms", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Ramp Up MS", "systemName": "ramp_up_ms", "type": "int", "readAccess": true, "writeAccess": true }
            ]
        },
        "servoMotor": {
            "friendlyName": "Servo Motor",
            "description": "The servo motor class provides a uniform interface for using hobby type servo motors.",
            "docsLink": "http://www.ev3dev.org/docs/drivers/servo-motor-class/",
            "systemClassName":  "servo-motor",
            "systemDeviceNameConvention":  "motor{0}",
            "systemProperties": [
                { "name": "Command", "systemName": "command", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Driver Name", "systemName": "driver_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Max Pulse MS", "systemName": "max_pulse_ms", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Mid Pulse MS", "systemName": "mid_pulse_ms", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Min Pulse MS", "systemName": "min_pulse_ms", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Polarity", "systemName": "polarity", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Port Name", "systemName": "port_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Position", "systemName": "position", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Rate", "systemName": "rate", "type": "int", "readAccess": true, "writeAccess": true }
            ]
        },
        "led": {
            "friendlyName": "LED",
            "description": "Any device controlled by the generic LED driver.",
            "systemClassName":  "leds",
            "systemProperties": [
                { "name": "Max Brightness", "systemName": "max_brightness", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Brightness", "systemName": "brightness", "type": "int", "readAccess": true, "writeAccess": true },
                { "name": "Trigger", "systemName": "trigger", "type": "string", "readAccess": true, "writeAccess": true }
            ]
        },
        "sensor": {
            "friendlyName": "Sensor",
            "description": "A generic interface to control most EV3 sensors.",
            "docsLink":  "http://www.ev3dev.org/docs/drivers/lego-sensor-class/",
            "systemClassName":  "lego-sensor",
            "systemDeviceNameConvention":  "sensor{0}",
            "systemProperties": [
                { "name": "Command", "systemName": "command", "type": "string", "readAccess": false, "writeAccess": true },
                { "name": "Commands", "systemName": "commands", "type": "string array", "readAccess": true, "writeAccess": false },
                { "name": "Decimals", "systemName": "decimals", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Driver Name", "systemName": "driver_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Mode", "systemName": "mode", "type": "string", "readAccess": true, "writeAccess": true },
                { "name": "Modes", "systemName": "modes", "type": "string array", "readAccess": true, "writeAccess": false },
                { "name": "Num Values", "systemName": "num_values", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Port Name", "systemName": "port_name", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Units", "systemName": "units", "type": "string", "readAccess": true, "writeAccess": false }
            ]
        },
        "i2cSensor": {
            "friendlyName": "I2C Sensor",
            "description": "A generic interface to control I2C-type EV3 sensors.",
            "systemClassName":  "lego-sensor",
            "systemDeviceNameConvention":  "sensor{0}",
            "inheritance": [
                "sensor"
            ],
            "systemProperties": [
                { "name": "FW Version", "systemName": "fw_version", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Poll MS", "systemName": "poll_ms", "type": "int", "readAccess": true, "writeAccess": true }
            ]
        },
        "powerSupply": {
            "friendlyName": "Power Supply",
            "description": "A generic interface to read data from the system's power_supply class. Uses the built-in legoev3-battery if none is specified.",
            "systemClassName":  "power_supply",
            "systemProperties": [
                { "name": "Measured Current", "systemName": "current_now", "type": "int", "readAccess": true, "writeAccess": false, "description": "The measured current that the battery is supplying (in microamps)" },
                { "name": "Measured Voltage", "systemName": "voltage_now", "type": "int", "readAccess": true, "writeAccess": false, "description": "The measured voltage that the battery is supplying (in microvolts)" },
                { "name": "Max Voltage", "systemName": "voltage_max_design", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Min Voltage", "systemName": "voltage_min_design", "type": "int", "readAccess": true, "writeAccess": false },
                { "name": "Technology", "systemName": "technology", "type": "string", "readAccess": true, "writeAccess": false },
                { "name": "Type", "systemName": "type", "type": "string", "readAccess": true, "writeAccess": false }
            ]
        }
    }
}
